{"ast":null,"code":"var _jsxFileName = \"/home/roy/PHASE-2-WEEK-2-CODE-CHALLENGE-bot-battlr/src/Pages/BotPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport BotArmy from './BotArmy';\nimport BotSpecs from '../components/BotSpecs';\nimport BotSearch from '../components/BotSearch';\nimport Filter from '../components/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotPage = () => {\n  _s();\n  const [allBots, setAllBots] = useState([]);\n  const [selectBot, setSelectBot] = useState(undefined);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('All');\n  useEffect(() => {\n    fetch('https://json-server-5-zmha.onrender.com/bots').then(res => res.json()).then(bots => setAllBots(bots.map(bot => ({\n      ...bot,\n      owned: false\n    }))));\n  }, []);\n  const clickBot = bot => setSelectBot(bot);\n  const addBot = selectedBot => {\n    setAllBots(allBots.map(bot => bot.id === selectedBot.id ? {\n      ...bot,\n      owned: !bot.owned\n    } : bot));\n  };\n  const filterFreeBots = () => {\n    let freeBots = allBots.filter(bot => !bot.owned);\n    if (filter !== 'All') {\n      freeBots = freeBots.filter(bot => bot.bot_class === filter);\n    }\n    if (query) {\n      freeBots = freeBots.filter(bot => bot.name.toLowerCase().includes(query.toLowerCase()));\n    }\n    return freeBots;\n  };\n  const filterOwnedBots = () => {\n    let ownedBots = allBots.filter(bot => bot.owned);\n    if (filter !== 'All') {\n      ownedBots = ownedBots.filter(bot => bot.bot_class === filter);\n    }\n    if (query) {\n      ownedBots = ownedBots.filter(bot => bot.name.toLowerCase().includes(query.toLowerCase()));\n    }\n    return ownedBots;\n  };\n  const handleClear = () => setQuery('');\n  const handleChange = query => setQuery(query);\n  const clearSpec = () => setSelectBot(undefined);\n  const filterChange = value => setFilter(value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(BotSearch, {\n      handleClear: handleClear,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filterChange: filterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotArmy, {\n      bots: filterOwnedBots(),\n      addBot: clickBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), selectBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectBot,\n      clearSpec: clearSpec,\n      addBot: addBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: filterFreeBots(),\n      addBot: clickBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(BotPage, \"BpGD2lGucDEu6QNe2xCPzmA4D6g=\");\n_c = BotPage;\nexport default BotPage;\nvar _c;\n$RefreshReg$(_c, \"BotPage\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","BotArmy","BotSpecs","BotSearch","Filter","jsxDEV","_jsxDEV","BotPage","_s","allBots","setAllBots","selectBot","setSelectBot","undefined","query","setQuery","filter","setFilter","fetch","then","res","json","bots","map","bot","owned","clickBot","addBot","selectedBot","id","filterFreeBots","freeBots","bot_class","name","toLowerCase","includes","filterOwnedBots","ownedBots","handleClear","handleChange","clearSpec","filterChange","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/roy/PHASE-2-WEEK-2-CODE-CHALLENGE-bot-battlr/src/Pages/BotPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport BotArmy from './BotArmy';\nimport BotSpecs from '../components/BotSpecs';\nimport BotSearch from '../components/BotSearch';\nimport Filter from '../components/Filter';\n\nconst BotPage = () => {\n  const [allBots, setAllBots] = useState([]);\n  const [selectBot, setSelectBot] = useState(undefined);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('All');\n\n  useEffect(() => {\n    fetch('https://json-server-5-zmha.onrender.com/bots')\n      .then(res => res.json())\n      .then(bots => setAllBots(bots.map(bot => ({ ...bot, owned: false }))));\n  }, []);\n\n  const clickBot = (bot) => setSelectBot(bot);\n\n  const addBot = (selectedBot) => {\n    setAllBots(allBots.map(bot => (bot.id === selectedBot.id ? { ...bot, owned: !bot.owned } : bot)));\n  };\n\n  const filterFreeBots = () => {\n    let freeBots = allBots.filter(bot => !bot.owned);\n    if (filter !== 'All') {\n      freeBots = freeBots.filter(bot => bot.bot_class === filter);\n    }\n    if (query) {\n      freeBots = freeBots.filter(bot => bot.name.toLowerCase().includes(query.toLowerCase()));\n    }\n    return freeBots;\n  };\n\n  const filterOwnedBots = () => {\n    let ownedBots = allBots.filter(bot => bot.owned);\n    if (filter !== 'All') {\n      ownedBots = ownedBots.filter(bot => bot.bot_class === filter);\n    }\n    if (query) {\n      ownedBots = ownedBots.filter(bot => bot.name.toLowerCase().includes(query.toLowerCase()));\n    }\n    return ownedBots;\n  };\n\n  const handleClear = () => setQuery('');\n\n  const handleChange = (query) => setQuery(query);\n\n  const clearSpec = () => setSelectBot(undefined);\n\n  const filterChange = (value) => setFilter(value);\n\n  return (\n    <div className=\"container\">\n      <BotSearch handleClear={handleClear} handleChange={handleChange} />\n      <br />\n      <Filter filterChange={filterChange} />\n      <BotArmy bots={filterOwnedBots()} addBot={clickBot} />\n      <br />\n      {selectBot ? (\n        <BotSpecs bot={selectBot} clearSpec={clearSpec} addBot={addBot} />\n      ) : (\n        <BotCollection bots={filterFreeBots()} addBot={clickBot} />\n      )}\n    </div>\n  );\n};\n\nexport default BotPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACe,SAAS,CAAC;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACdmB,KAAK,CAAC,8CAA8C,CAAC,CAClDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIZ,UAAU,CAACY,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;MAAE,GAAGA,GAAG;MAAEC,KAAK,EAAE;IAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1E,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAIF,GAAG,IAAKZ,YAAY,CAACY,GAAG,CAAC;EAE3C,MAAMG,MAAM,GAAIC,WAAW,IAAK;IAC9BlB,UAAU,CAACD,OAAO,CAACc,GAAG,CAACC,GAAG,IAAKA,GAAG,CAACK,EAAE,KAAKD,WAAW,CAACC,EAAE,GAAG;MAAE,GAAGL,GAAG;MAAEC,KAAK,EAAE,CAACD,GAAG,CAACC;IAAM,CAAC,GAAGD,GAAI,CAAC,CAAC;EACnG,CAAC;EAED,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIC,QAAQ,GAAGtB,OAAO,CAACO,MAAM,CAACQ,GAAG,IAAI,CAACA,GAAG,CAACC,KAAK,CAAC;IAChD,IAAIT,MAAM,KAAK,KAAK,EAAE;MACpBe,QAAQ,GAAGA,QAAQ,CAACf,MAAM,CAACQ,GAAG,IAAIA,GAAG,CAACQ,SAAS,KAAKhB,MAAM,CAAC;IAC7D;IACA,IAAIF,KAAK,EAAE;MACTiB,QAAQ,GAAGA,QAAQ,CAACf,MAAM,CAACQ,GAAG,IAAIA,GAAG,CAACS,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,KAAK,CAACoB,WAAW,CAAC,CAAC,CAAC,CAAC;IACzF;IACA,OAAOH,QAAQ;EACjB,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIC,SAAS,GAAG5B,OAAO,CAACO,MAAM,CAACQ,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC;IAChD,IAAIT,MAAM,KAAK,KAAK,EAAE;MACpBqB,SAAS,GAAGA,SAAS,CAACrB,MAAM,CAACQ,GAAG,IAAIA,GAAG,CAACQ,SAAS,KAAKhB,MAAM,CAAC;IAC/D;IACA,IAAIF,KAAK,EAAE;MACTuB,SAAS,GAAGA,SAAS,CAACrB,MAAM,CAACQ,GAAG,IAAIA,GAAG,CAACS,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,KAAK,CAACoB,WAAW,CAAC,CAAC,CAAC,CAAC;IAC3F;IACA,OAAOG,SAAS;EAClB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAMvB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMwB,YAAY,GAAIzB,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAAC;EAE/C,MAAM0B,SAAS,GAAGA,CAAA,KAAM5B,YAAY,CAACC,SAAS,CAAC;EAE/C,MAAM4B,YAAY,GAAIC,KAAK,IAAKzB,SAAS,CAACyB,KAAK,CAAC;EAEhD,oBACEpC,OAAA;IAAKqC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtC,OAAA,CAACH,SAAS;MAACmC,WAAW,EAAEA,WAAY;MAACC,YAAY,EAAEA;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnE1C,OAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1C,OAAA,CAACF,MAAM;MAACqC,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtC1C,OAAA,CAACL,OAAO;MAACqB,IAAI,EAAEc,eAAe,CAAC,CAAE;MAACT,MAAM,EAAED;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtD1C,OAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLrC,SAAS,gBACRL,OAAA,CAACJ,QAAQ;MAACsB,GAAG,EAAEb,SAAU;MAAC6B,SAAS,EAAEA,SAAU;MAACb,MAAM,EAAEA;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAElE1C,OAAA,CAACN,aAAa;MAACsB,IAAI,EAAEQ,cAAc,CAAC,CAAE;MAACH,MAAM,EAAED;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxC,EAAA,CA9DID,OAAO;AAAA0C,EAAA,GAAP1C,OAAO;AAgEb,eAAeA,OAAO;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}